From acd34d50260b60ce5e7cc83506874e6f611e02f2 Mon Sep 17 00:00:00 2001
From: Richard Hughes <richard@hughsie.com>
Date: Fri, 8 Jan 2016 10:42:46 +0000
Subject: Do not crash on refresh if the fwupd daemon is not available

Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1282395
---
 src/plugins/gs-plugin-fwupd.c | 38 ++++++++++++++++----------------------
 1 file changed, 16 insertions(+), 22 deletions(-)

--- a/src/plugins/gs-plugin-fwupd.c
+++ b/src/plugins/gs-plugin-fwupd.c
@@ -32,7 +32,7 @@
 #include <gs-plugin.h>
 
 struct GsPluginPrivate {
-	gsize			 done_init;
+	GMutex			 mutex;
 	GDBusProxy		*proxy;
 	GPtrArray		*to_download;
 	GPtrArray		*to_ignore;
@@ -135,6 +135,7 @@
 	g_autoptr(GError) error_local = NULL;
 	g_autofree gchar *data = NULL;
 	g_autoptr(GDBusConnection) conn = NULL;
+	g_autoptr(GMutexLocker) locker = g_mutex_locker_new (&plugin->priv->mutex);
 
 	/* register D-Bus errors */
 	fwupd_error_quark ();
@@ -425,23 +426,20 @@
 {
 	GVariant *variant;
 	const gchar *key;
-	gboolean ret;
 	g_autoptr(GError) error_local = NULL;
 	g_autoptr(GsApp) app = NULL;
 	g_autoptr(GVariantIter) iter = NULL;
 	g_autoptr(GVariant) val = NULL;
 
-	/* watch the file in case it comes or goes */
-	if (g_once_init_enter (&plugin->priv->done_init)) {
-		ret = gs_plugin_startup (plugin, cancellable, error);
-		g_once_init_leave (&plugin->priv->done_init, TRUE);
-		if (!ret)
+	/* set up plugin */
+	if (plugin->priv->proxy == NULL) {
+		if (!gs_plugin_startup (plugin, cancellable, error))
 			return FALSE;
 	}
-
-	/* could not connect */
 	if (plugin->priv->proxy == NULL)
 		return TRUE;
+
+	/* get historical updates */
 	val = g_dbus_proxy_call_sync (plugin->priv->proxy,
 				      "GetResults",
 				      g_variant_new ("(s)", FWUPD_DEVICE_ID_ANY),
@@ -490,23 +488,20 @@
 		       GError **error)
 {
 	const gchar *id;
-	gboolean ret;
 	GVariantIter *iter_device;
 	g_autoptr(GError) error_local = NULL;
 	g_autoptr(GVariantIter) iter = NULL;
 	g_autoptr(GVariant) val = NULL;
 
-	/* watch the file in case it comes or goes */
-	if (g_once_init_enter (&plugin->priv->done_init)) {
-		ret = gs_plugin_startup (plugin, cancellable, error);
-		g_once_init_leave (&plugin->priv->done_init, TRUE);
-		if (!ret)
+	/* set up plugin */
+	if (plugin->priv->proxy == NULL) {
+		if (!gs_plugin_startup (plugin, cancellable, error))
 			return FALSE;
 	}
-
-	/* could not connect */
 	if (plugin->priv->proxy == NULL)
 		return TRUE;
+
+	/* get current list of updates */
 	val = g_dbus_proxy_call_sync (plugin->priv->proxy,
 				      "GetUpdates",
 				      NULL,
@@ -772,16 +767,15 @@
 		   GError **error)
 {
 	const gchar *tmp;
-	gboolean ret;
 	guint i;
 
 	/* set up plugin */
-	if (g_once_init_enter (&plugin->priv->done_init)) {
-		ret = gs_plugin_startup (plugin, cancellable, error);
-		g_once_init_leave (&plugin->priv->done_init, TRUE);
-		if (!ret)
+	if (plugin->priv->proxy == NULL) {
+		if (!gs_plugin_startup (plugin, cancellable, error))
 			return FALSE;
 	}
+	if (plugin->priv->proxy == NULL)
+		return TRUE;
 
 	/* ensure networking is set up */
 	if (!gs_plugin_fwupd_setup_networking (plugin, error))
